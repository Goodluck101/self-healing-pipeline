version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/simple-bank-api
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest ./app
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo "Pushing the Docker image to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Updating Kubernetes manifest with new image..."
      - sed -i.bak "s|image:.*|image: $REPOSITORY_URI:latest|g" ./kubernetes/deployment.yaml
      # Introduce the bug in the bad deployment!
      - sed -i.bak 's/value: "False"/value: "True"/g' ./kubernetes/deployment.yaml
      - echo "Configuring kubectl context for EKS cluster..."
      - aws eks update-kubeconfig --name self-healing-demo-cluster --region $AWS_DEFAULT_REGION
      - echo "Deploying to EKS cluster..."
      - kubectl apply -f ./kubernetes/service.yaml
      - kubectl apply -f ./kubernetes/deployment.yaml
      - echo "Deployment complete."
artifacts:
  files:
    - kubernetes/*.yaml
    - app/*.py
    - app/Dockerfile
    - app/requirements.txt
